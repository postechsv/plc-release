-- generated by btor2nuxmv.py on Tue Mar 31 22:31:49 2015
MODULE main
IVAR
"alloc_raw" : boolean;
"clock" : boolean;
"free_addr_raw" : word[4];
"free_raw" : boolean;

VAR
"$auto$rename.cc:157:execute$130" : boolean;
"$auto$rename.cc:157:execute$131" : word[5];
"a5" : array word[4] of word[1];

INIT "a5" = CONSTARRAY(typeof("a5"), 0ud1_0); 

DEFINE
__expr1 := ! "$auto$rename.cc:157:execute$130";
__expr2 := "$auto$rename.cc:157:execute$131" = 0ud5_0;
__expr3 := __expr2 & __expr1;
__expr4 := WRITE("a5", "free_addr_raw", 0ud1_0);
__expr5 := "clock" & "free_raw";
__expr6 := (case __expr5: __expr4; TRUE: "a5"; esac);
__expr7 := READ("a5", 0ud4_15);
__expr8 := __expr7 = 0ud1_1;
__expr9 := (case __expr8: 0ud32_0; TRUE: 0ud32_15; esac);
__expr10 := READ("a5", 0ud4_14);
__expr11 := __expr10 = 0ud1_1;
__expr12 := (case __expr11: __expr9; TRUE: 0ud32_14; esac);
__expr13 := READ("a5", 0ud4_13);
__expr14 := __expr13 = 0ud1_1;
__expr15 := (case __expr14: __expr12; TRUE: 0ud32_13; esac);
__expr16 := READ("a5", 0ud4_12);
__expr17 := __expr16 = 0ud1_1;
__expr18 := (case __expr17: __expr15; TRUE: 0ud32_12; esac);
__expr19 := READ("a5", 0ud4_11);
__expr20 := __expr19 = 0ud1_1;
__expr21 := (case __expr20: __expr18; TRUE: 0ud32_11; esac);
__expr22 := READ("a5", 0ud4_10);
__expr23 := __expr22 = 0ud1_1;
__expr24 := (case __expr23: __expr21; TRUE: 0ud32_10; esac);
__expr25 := READ("a5", 0ud4_9);
__expr26 := __expr25 = 0ud1_1;
__expr27 := (case __expr26: __expr24; TRUE: 0ud32_9; esac);
__expr28 := READ("a5", 0ud4_8);
__expr29 := __expr28 = 0ud1_1;
__expr30 := (case __expr29: __expr27; TRUE: 0ud32_8; esac);
__expr31 := READ("a5", 0ud4_7);
__expr32 := __expr31 = 0ud1_1;
__expr33 := (case __expr32: __expr30; TRUE: 0ud32_7; esac);
__expr34 := READ("a5", 0ud4_6);
__expr35 := __expr34 = 0ud1_1;
__expr36 := (case __expr35: __expr33; TRUE: 0ud32_6; esac);
__expr37 := READ("a5", 0ud4_5);
__expr38 := __expr37 = 0ud1_1;
__expr39 := (case __expr38: __expr36; TRUE: 0ud32_5; esac);
__expr40 := READ("a5", 0ud4_4);
__expr41 := __expr40 = 0ud1_1;
__expr42 := (case __expr41: __expr39; TRUE: 0ud32_4; esac);
__expr43 := READ("a5", 0ud4_3);
__expr44 := __expr43 = 0ud1_1;
__expr45 := (case __expr44: __expr42; TRUE: 0ud32_3; esac);
__expr46 := READ("a5", 0ud4_2);
__expr47 := __expr46 = 0ud1_1;
__expr48 := (case __expr47: __expr45; TRUE: 0ud32_2; esac);
__expr49 := READ("a5", 0ud4_1);
__expr50 := __expr49 = 0ud1_1;
__expr51 := (case __expr50: __expr48; TRUE: 0ud32_1; esac);
__expr52 := READ("a5", 0ud4_0);
__expr53 := __expr52 = 0ud1_1;
__expr54 := (case __expr53: __expr51; TRUE: 0ud32_0; esac);
__expr55 := __expr54[3:0];
__expr56 := WRITE("a5", __expr55, 0ud1_1);
__expr57 := "$auto$rename.cc:157:execute$131" = 0ud5_16;
__expr58 := "$auto$rename.cc:157:execute$130" & __expr57;
__expr59 := ! __expr58;
__expr60 := "alloc_raw" & __expr59;
__expr61 := "clock" & __expr60;
__expr62 := (case __expr61: __expr56; TRUE: __expr6; esac);
__expr63 := __expr62 = next("a5");
__expr64 := "clock" | "$auto$rename.cc:157:execute$130";
__expr65 := ! "clock";
__expr66 := "alloc_raw" | __expr65;
__expr67 := __expr66 & __expr64;
__expr68 := __expr67 <-> next("$auto$rename.cc:157:execute$130");
__expr69 := READ("a5", "free_addr_raw");
__expr70 := (case "free_raw": 0ud1_1; TRUE: 0ud1_0; esac);
__expr71 := __expr70 & __expr69;
__expr72 := 0ud4_0 :: __expr71;
__expr73 := - __expr72;
__expr74 := (case __expr58: 0ud1_1; TRUE: 0ud1_0; esac);
__expr75 := __expr74 :: 0ud4_0;
__expr76 := ! __expr75;
__expr77 := (case "alloc_raw": 0ud1_1; TRUE: 0ud1_0; esac);
__expr78 := 0ud4_0 :: __expr77;
__expr79 := __expr78 & __expr76;
__expr80 := "$auto$rename.cc:157:execute$131" + __expr79;
__expr81 := __expr80 + __expr73;
__expr82 := (case "clock": __expr81; TRUE: "$auto$rename.cc:157:execute$131"; esac);
__expr83 := __expr82 = next("$auto$rename.cc:157:execute$131");
__expr84 := __expr83 & __expr68;
__expr85 := __expr84 & __expr63;
__expr86 := 0ud5_16 < "$auto$rename.cc:157:execute$131";
__expr87 := ! __expr86;

INIT __expr3;
TRANS __expr85;
INVARSPEC __expr87;
