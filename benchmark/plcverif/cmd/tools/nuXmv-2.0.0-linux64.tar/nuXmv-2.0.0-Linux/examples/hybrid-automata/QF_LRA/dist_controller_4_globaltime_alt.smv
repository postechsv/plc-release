
-- Dumped layers are: model 

MODULE main
-- Input variables from layer 'model'
IVAR
controller.sensors_u_must_be_0 : real;
controller.EVENT : {send_1, ack_1, expire_1, signal_1, send_2, ack_2, expire_2, signal_2, send_3, ack_3, expire_3, signal_3, send_4, ack_4, expire_4, signal_4, timed, stutter};
scheduler.EVENT : {read_1, request_1, read_2, request_2, read_3, request_3, read_4, request_4, timed, stutter};
sensor_4.EVENT : {request_evt, read_evt, send_evt, ack_evt, timed, stutter};
sensor_3.EVENT : {request_evt, read_evt, send_evt, ack_evt, timed, stutter};
sensor_2.EVENT : {request_evt, read_evt, send_evt, ack_evt, timed, stutter};
sensor_1.EVENT : {request_evt, read_evt, send_evt, ack_evt, timed, stutter};
sensor_1.delta : real;
sensor_2.delta : real;
sensor_3.delta : real;
sensor_4.delta : real;
scheduler.delta : real;
controller.delta : real;

-- State variables from layer 'model'
VAR
controller.u : real;
--controller.received : array 1..4 of boolean;
controller.received_1_ : boolean;
controller.received_2_ : boolean;
controller.received_3_ : boolean;
controller.received_4_ : boolean;
controller.z : real;
controller.location : {rest, rec, wait, compute};
scheduler.x_4 : real;
scheduler.x_3 : real;
scheduler.wait_3 : boolean;
scheduler.x_2 : real;
scheduler.wait_2 : boolean;
scheduler.x_1 : real;
scheduler.wait_1 : boolean;
scheduler.location : {idle, loc_sensor_1, loc_sensor_2, loc_sensor_3, loc_sensor_4};
sensor_4.u : real;
sensor_4.y : real;
sensor_4.location : {done, read, wait, send};
sensor_3.u : real;
sensor_3.y : real;
sensor_3.location : {done, read, wait, send};
sensor_2.u : real;
sensor_2.y : real;
sensor_2.location : {done, read, wait, send};
sensor_1.u : real;
sensor_1.y : real;
sensor_1.location : {done, read, wait, send};
sensor_1.time : real;
sensor_2.time : real;
sensor_3.time : real;
sensor_4.time : real;
scheduler.time : real;
controller.time : real;

-- Frozen variables from layer 'model'
-- Functions from layer 'model'
-- Defines from layer 'model'
CONSTANTS
 rest, rec, wait, compute, send_1, ack_1, expire_1, signal_1, send_2, ack_2, expire_2, signal_2, send_3, ack_3, expire_3, signal_3, send_4, ack_4, expire_4, signal_4, timed, stutter, idle, loc_sensor_1, loc_sensor_2, loc_sensor_3, loc_sensor_4, read_1, request_1, read_2, request_2, read_3, request_3, read_4, request_4, done, read, send, request_evt, read_evt, send_evt, ack_evt ;

-- Assignments from layer 'model'

INIT
 sensor_1.time = 0

INIT
 sensor_1.location = done

INIT
 sensor_1.y = 1

INIT
 sensor_1.u = 0

INIT
 sensor_2.time = 0

INIT
 sensor_2.location = done

INIT
 sensor_2.y = 1

INIT
 sensor_2.u = 0

INIT
 sensor_3.time = 0

INIT
 sensor_3.location = done

INIT
 sensor_3.y = 1

INIT
 sensor_3.u = 0

INIT
 sensor_4.time = 0

INIT
 sensor_4.location = done

INIT
 sensor_4.y = 1

INIT
 sensor_4.u = 0

INIT
 scheduler.time = 0

INIT
 scheduler.location = idle

INIT
 !scheduler.wait_1

INIT
 scheduler.x_1 = 0

INIT
 !scheduler.wait_2

INIT
 scheduler.x_2 = 0

INIT
 !scheduler.wait_3

INIT
 scheduler.x_3 = 0

INIT
 scheduler.x_4 = 0

INIT
 controller.time = 0

INIT
 controller.location = rest

INIT
 controller.z = 0

INIT
 !controller.received_1_

INIT
 !controller.received_2_

INIT
 !controller.received_3_

INIT
 !controller.received_4_

INIT
 controller.u = 0

INIT
 controller.u = 0

INIT
 (sensor_1.location = done -> sensor_1.y <= 1)

INIT
 (sensor_1.location = wait -> sensor_1.y <= 4)

INIT
 (sensor_2.location = done -> sensor_2.y <= 1)

INIT
 (sensor_2.location = wait -> sensor_2.y <= 8)

INIT
 (sensor_3.location = done -> sensor_3.y <= 1)

INIT
 (sensor_3.location = wait -> sensor_3.y <= 12)

INIT
 (sensor_4.location = done -> sensor_4.y <= 1)

INIT
 (sensor_4.location = wait -> sensor_4.y <= 16)

INIT
 (scheduler.location = loc_sensor_1 -> scheduler.x_1 <= 16)

INIT
 (scheduler.location = loc_sensor_2 -> scheduler.x_2 <= 16)

INIT
 (scheduler.location = loc_sensor_3 -> scheduler.x_3 <= 16)

INIT
 (scheduler.location = loc_sensor_4 -> scheduler.x_4 <= 16)

INIT
 (controller.location = rec -> controller.z <= 1)

INIT
 (controller.location = wait -> controller.z <= 1)

INIT
 (controller.location = compute -> controller.z <= 1)



TRANS
 ((((((((((((((((((((((((((((((((((next(sensor_1.time) = sensor_1.time & (((((sensor_1.location = done & sensor_1.y >= 1) & next(sensor_1.location) = read) & next(sensor_1.y) = sensor_1.y) & next(sensor_1.u) = sensor_1.u) | ((((sensor_1.location = wait & sensor_1.y >= 4) & next(sensor_1.location) = read) & next(sensor_1.y) = sensor_1.y) & next(sensor_1.u) = sensor_1.u))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & next(scheduler.time) = scheduler.time) & (((((((((((scheduler.location = idle & next(scheduler.location) = loc_sensor_1) & next(scheduler.x_1) = 0) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3) | ((((((((scheduler.location = loc_sensor_2 & next(scheduler.location) = scheduler.location) & next(scheduler.wait_1)) & next(scheduler.x_1) = 0) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_3 & next(scheduler.location) = scheduler.location) & next(scheduler.wait_1)) & next(scheduler.x_1) = 0) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_4 & next(scheduler.location) = scheduler.location) & next(scheduler.wait_1)) & next(scheduler.x_1) = 0) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3))) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_1.EVENT = request_evt & scheduler.EVENT = request_1) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & controller.EVENT = stutter)) | ((((((((((next(sensor_1.time) = sensor_1.time & (((sensor_1.location = read & next(sensor_1.location) = wait) & next(sensor_1.y) = 0) & next(sensor_1.u) = 0)) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & next(scheduler.time) = scheduler.time) & ((scheduler.location = loc_sensor_1 & scheduler.x_1 >= 0.3125) & (((((((next(scheduler.location) = idle & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3))) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_1.EVENT = read_evt & scheduler.EVENT = read_1) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & controller.EVENT = stutter))) | ((((((((((((next(sensor_1.time) = sensor_1.time & (((sensor_1.location = wait & next(sensor_1.location) = send) & next(sensor_1.y) = sensor_1.y) & next(sensor_1.u) = sensor_1.u)) & sensor_1.u = controller.sensors_u_must_be_0) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((controller.location = rest & !controller.received_1_) & next(controller.z) = 0) & next(controller.location) = rec) & next(controller.received_1_)) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_) & next(controller.u) = controller.u) | ((((((((controller.location = wait & !controller.received_1_) & next(controller.z) = 0) & next(controller.u) = controller.u) & next(controller.location) = rec) & next(controller.received_1_)) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_1.EVENT = send_evt & controller.EVENT = send_1) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.time) = sensor_1.time & (((sensor_1.location = send & next(sensor_1.location) = done) & next(sensor_1.y) = 0) & next(sensor_1.u) = sensor_1.u)) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((((controller.location = rec & controller.received_1_) & !((controller.received_2_ & controller.received_3_) & controller.received_4_)) & controller.z >= 0.25) & next(controller.z) = controller.z) & next(controller.location) = wait) & next(controller.u) = 0) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_) | ((((((((((((controller.location = rec & controller.received_1_) & controller.received_2_) & controller.received_3_) & controller.received_4_) & controller.z >= 0.25) & next(controller.z) = 0) & next(controller.location) = compute) & next(controller.u) = controller.u) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_1.EVENT = ack_evt & controller.EVENT = ack_1) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((((((((((((((((((((((next(sensor_1.time) = sensor_1.time + sensor_1.delta & (next(sensor_1.y) - sensor_1.y = sensor_1.delta * case
(sensor_1.location = done | sensor_1.location = wait) : 1;
TRUE : 0;
esac & next(sensor_1.location) = sensor_1.location)) & (!(sensor_1.delta = 0) | (next(sensor_1.u) = sensor_1.u & next(sensor_1.y) = sensor_1.y))) & next(sensor_1.u) - sensor_1.u = 0) & ((sensor_1.delta >= 0 & sensor_2.delta = sensor_1.delta) & sensor_2.delta = sensor_1.delta)) & next(sensor_2.time) = sensor_2.time + sensor_2.delta) & (next(sensor_2.y) - sensor_2.y = sensor_2.delta * case
(sensor_2.location = done | sensor_2.location = wait) : 1;
TRUE : 0;
esac & next(sensor_2.location) = sensor_2.location)) & (!(sensor_2.delta = 0) | (next(sensor_2.u) = sensor_2.u & next(sensor_2.y) = sensor_2.y))) & next(sensor_2.u) - sensor_2.u = 0) & ((sensor_2.delta >= 0 & sensor_3.delta = sensor_2.delta) & sensor_3.delta = sensor_2.delta)) & next(sensor_3.time) = sensor_3.time + sensor_3.delta) & (next(sensor_3.y) - sensor_3.y = sensor_3.delta * case
(sensor_3.location = done | sensor_3.location = wait) : 1;
TRUE : 0;
esac & next(sensor_3.location) = sensor_3.location)) & (!(sensor_3.delta = 0) | (next(sensor_3.u) = sensor_3.u & next(sensor_3.y) = sensor_3.y))) & next(sensor_3.u) - sensor_3.u = 0) & ((sensor_3.delta >= 0 & sensor_4.delta = sensor_3.delta) & sensor_4.delta = sensor_3.delta)) & next(sensor_4.time) = sensor_4.time + sensor_4.delta) & (next(sensor_4.y) - sensor_4.y = sensor_4.delta * case
(sensor_4.location = done | sensor_4.location = wait) : 1;
TRUE : 0;
esac & next(sensor_4.location) = sensor_4.location)) & (!(sensor_4.delta = 0) | (next(sensor_4.u) = sensor_4.u & next(sensor_4.y) = sensor_4.y))) & next(sensor_4.u) - sensor_4.u = 0) & ((sensor_4.delta >= 0 & scheduler.delta = sensor_4.delta) & scheduler.delta = sensor_4.delta)) & next(scheduler.time) = scheduler.time + scheduler.delta) & ((!(scheduler.location = loc_sensor_1) | (!(next(scheduler.x_1) - scheduler.x_1 = scheduler.delta & scheduler.location != loc_sensor_1) | (!(next(scheduler.x_1) - scheduler.x_1 = 0 & scheduler.location = loc_sensor_2) | (!(next(scheduler.x_2) - scheduler.x_2 = scheduler.delta & scheduler.location != loc_sensor_2) | (!(next(scheduler.x_2) - scheduler.x_2 = 0 & scheduler.location = loc_sensor_3) | (!(next(scheduler.x_3) - scheduler.x_3 = scheduler.delta & scheduler.location != loc_sensor_3) | (!(next(scheduler.x_3) - scheduler.x_3 = 0 & scheduler.location = loc_sensor_4) | (!(next(scheduler.x_4) - scheduler.x_4 = scheduler.delta & scheduler.location != loc_sensor_4) | next(scheduler.x_4) - scheduler.x_4 = 0)))))))) & (next(scheduler.location) = scheduler.location & ((next(scheduler.wait_1) <-> scheduler.wait_1) & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.wait_3) <-> scheduler.wait_3)))))) & (!(scheduler.delta = 0) | (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & (next(scheduler.x_2) = scheduler.x_2 & next(scheduler.x_1) = scheduler.x_1))))) & ((scheduler.delta >= 0 & controller.delta = scheduler.delta) & controller.delta = scheduler.delta)) & next(controller.time) = controller.time + controller.delta) & (((!(controller.location = rest) | next(controller.z) - controller.z = 0) & (!(controller.location != rest) | next(controller.z) - controller.z = controller.delta)) & (next(controller.location) = controller.location & ((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_))))))) & (!(controller.delta = 0) | (next(controller.u) = controller.u & next(controller.z) = controller.z))) & next(controller.u) - controller.u = controller.delta) & controller.delta >= 0) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_1.EVENT = timed & sensor_2.EVENT = timed) & sensor_3.EVENT = timed) & sensor_4.EVENT = timed) & scheduler.EVENT = timed) & controller.EVENT = timed))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & next(sensor_2.time) = sensor_2.time) & (((((sensor_2.location = done & sensor_2.y >= 1) & next(sensor_2.location) = read) & next(sensor_2.y) = sensor_2.y) & next(sensor_2.u) = sensor_2.u) | ((((sensor_2.location = wait & sensor_2.y >= 8) & next(sensor_2.location) = read) & next(sensor_2.y) = sensor_2.y) & next(sensor_2.u) = sensor_2.u))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & next(scheduler.time) = scheduler.time) & (((((((((((scheduler.location = idle & next(scheduler.location) = loc_sensor_2) & next(scheduler.x_2) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3) | ((((((((scheduler.location = loc_sensor_3 & next(scheduler.location) = scheduler.location) & next(scheduler.wait_2)) & next(scheduler.x_2) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_4 & next(scheduler.location) = scheduler.location) & next(scheduler.wait_2)) & next(scheduler.x_2) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_1 & next(scheduler.location) = loc_sensor_2) & next(scheduler.wait_1)) & next(scheduler.x_2) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3))) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_2.EVENT = request_evt & scheduler.EVENT = request_2) & sensor_1.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & controller.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & next(sensor_2.time) = sensor_2.time) & (((sensor_2.location = read & next(sensor_2.location) = wait) & next(sensor_2.y) = 0) & next(sensor_2.u) = 0)) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & next(scheduler.time) = scheduler.time) & ((scheduler.location = loc_sensor_2 & scheduler.x_2 >= 2 * 0.3125) & case
scheduler.wait_1 : ((((((next(scheduler.location) = loc_sensor_1 & !next(scheduler.wait_1)) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3);
TRUE : (((((((next(scheduler.location) = idle & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3);
esac)) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_2.EVENT = read_evt & scheduler.EVENT = read_2) & sensor_1.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & controller.EVENT = stutter))) | (((((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & next(sensor_2.time) = sensor_2.time) & (((sensor_2.location = wait & next(sensor_2.location) = send) & next(sensor_2.y) = sensor_2.y) & next(sensor_2.u) = sensor_2.u)) & sensor_2.u = controller.sensors_u_must_be_0) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((controller.location = rest & !controller.received_2_) & next(controller.z) = 0) & next(controller.location) = rec) & next(controller.received_2_)) & next(controller.received_1_) = controller.received_1_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_) & next(controller.u) = controller.u) | ((((((((controller.location = wait & !controller.received_2_) & next(controller.z) = 0) & next(controller.u) = controller.u) & next(controller.location) = rec) & next(controller.received_2_)) & next(controller.received_1_) = controller.received_1_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_2.EVENT = send_evt & controller.EVENT = send_2) & sensor_1.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | ((((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & next(sensor_2.time) = sensor_2.time) & (((sensor_2.location = send & next(sensor_2.location) = done) & next(sensor_2.y) = 0) & next(sensor_2.u) = sensor_2.u)) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((((controller.location = rec & controller.received_2_) & !((controller.received_1_ & controller.received_3_) & controller.received_4_)) & controller.z >= 0.25) & next(controller.z) = controller.z) & next(controller.location) = wait) & next(controller.u) = 0) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_) | ((((((((((((controller.location = rec & controller.received_1_) & controller.received_2_) & controller.received_3_) & controller.received_4_) & controller.z >= 0.25) & next(controller.z) = 0) & next(controller.location) = compute) & next(controller.u) = controller.u) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_2.EVENT = ack_evt & controller.EVENT = ack_2) & sensor_1.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & next(sensor_3.time) = sensor_3.time) & (((((sensor_3.location = done & sensor_3.y >= 1) & next(sensor_3.location) = read) & next(sensor_3.y) = sensor_3.y) & next(sensor_3.u) = sensor_3.u) | ((((sensor_3.location = wait & sensor_3.y >= 12) & next(sensor_3.location) = read) & next(sensor_3.y) = sensor_3.y) & next(sensor_3.u) = sensor_3.u))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & next(scheduler.time) = scheduler.time) & (((((((((((scheduler.location = idle & next(scheduler.location) = loc_sensor_3) & next(scheduler.x_3) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3) | ((((((((scheduler.location = loc_sensor_4 & next(scheduler.location) = scheduler.location) & next(scheduler.wait_3)) & next(scheduler.x_3) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2)) | ((((((((scheduler.location = loc_sensor_1 & next(scheduler.location) = loc_sensor_3) & next(scheduler.wait_1)) & next(scheduler.x_3) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_2 & next(scheduler.location) = loc_sensor_3) & next(scheduler.wait_2)) & next(scheduler.x_3) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_3) = scheduler.wait_3))) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_3.EVENT = request_evt & scheduler.EVENT = request_3) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_4.EVENT = stutter) & controller.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & next(sensor_3.time) = sensor_3.time) & (((sensor_3.location = read & next(sensor_3.location) = wait) & next(sensor_3.y) = 0) & next(sensor_3.u) = 0)) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & next(scheduler.time) = scheduler.time) & ((scheduler.location = loc_sensor_3 & scheduler.x_3 >= 3 * 0.3125) & case
scheduler.wait_2 : ((((((next(scheduler.location) = loc_sensor_2 & !next(scheduler.wait_2)) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_3) = scheduler.wait_3);
scheduler.wait_1 : ((((((next(scheduler.location) = loc_sensor_1 & !next(scheduler.wait_1)) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3);
TRUE : (((((((next(scheduler.location) = idle & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3);
esac)) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_3.EVENT = read_evt & scheduler.EVENT = read_3) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_4.EVENT = stutter) & controller.EVENT = stutter))) | (((((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & next(sensor_3.time) = sensor_3.time) & (((sensor_3.location = wait & next(sensor_3.location) = send) & next(sensor_3.y) = sensor_3.y) & next(sensor_3.u) = sensor_3.u)) & sensor_3.u = controller.sensors_u_must_be_0) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((controller.location = rest & !controller.received_3_) & next(controller.z) = 0) & next(controller.location) = rec) & next(controller.received_3_)) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_4_) = controller.received_4_) & next(controller.u) = controller.u) | ((((((((controller.location = wait & !controller.received_3_) & next(controller.z) = 0) & next(controller.u) = controller.u) & next(controller.location) = rec) & next(controller.received_3_)) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_3.EVENT = send_evt & controller.EVENT = send_3) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | ((((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & next(sensor_3.time) = sensor_3.time) & (((sensor_3.location = send & next(sensor_3.location) = done) & next(sensor_3.y) = 0) & next(sensor_3.u) = sensor_3.u)) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((((controller.location = rec & controller.received_3_) & !((controller.received_1_ & controller.received_2_) & controller.received_4_)) & controller.z >= 0.25) & next(controller.z) = controller.z) & next(controller.location) = wait) & next(controller.u) = 0) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_) | ((((((((((((controller.location = rec & controller.received_1_) & controller.received_2_) & controller.received_3_) & controller.received_4_) & controller.z >= 0.25) & next(controller.z) = 0) & next(controller.location) = compute) & next(controller.u) = controller.u) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_3.EVENT = ack_evt & controller.EVENT = ack_3) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & next(sensor_4.time) = sensor_4.time) & (((((sensor_4.location = done & sensor_4.y >= 1) & next(sensor_4.location) = read) & next(sensor_4.y) = sensor_4.y) & next(sensor_4.u) = sensor_4.u) | ((((sensor_4.location = wait & sensor_4.y >= 16) & next(sensor_4.location) = read) & next(sensor_4.y) = sensor_4.y) & next(sensor_4.u) = sensor_4.u))) & next(scheduler.time) = scheduler.time) & (((((((((((scheduler.location = idle & next(scheduler.location) = loc_sensor_4) & next(scheduler.x_4) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3) | ((((((((scheduler.location = loc_sensor_1 & next(scheduler.location) = loc_sensor_4) & next(scheduler.wait_1)) & next(scheduler.x_4) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_2 & next(scheduler.location) = loc_sensor_4) & next(scheduler.wait_2)) & next(scheduler.x_4) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_3) = scheduler.wait_3)) | ((((((((scheduler.location = loc_sensor_3 & next(scheduler.location) = loc_sensor_4) & next(scheduler.wait_3)) & next(scheduler.x_4) = 0) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2))) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_4.EVENT = request_evt & scheduler.EVENT = request_4) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & controller.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & next(sensor_4.time) = sensor_4.time) & (((sensor_4.location = read & next(sensor_4.location) = wait) & next(sensor_4.y) = 0) & next(sensor_4.u) = 0)) & next(scheduler.time) = scheduler.time) & ((scheduler.location = loc_sensor_4 & scheduler.x_4 >= 4 * 0.3125) & case
scheduler.wait_3 : ((((((next(scheduler.location) = loc_sensor_3 & !next(scheduler.wait_3)) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2);
scheduler.wait_2 : ((((((next(scheduler.location) = loc_sensor_2 & !next(scheduler.wait_2)) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_3) = scheduler.wait_3);
scheduler.wait_1 : ((((((next(scheduler.location) = loc_sensor_1 & !next(scheduler.wait_1)) & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3);
TRUE : (((((((next(scheduler.location) = idle & next(scheduler.x_1) = scheduler.x_1) & next(scheduler.x_2) = scheduler.x_2) & next(scheduler.x_3) = scheduler.x_3) & next(scheduler.x_4) = scheduler.x_4) & next(scheduler.wait_1) = scheduler.wait_1) & next(scheduler.wait_2) = scheduler.wait_2) & next(scheduler.wait_3) = scheduler.wait_3);
esac)) & (next(controller.u) = controller.u & (((next(controller.received_4_) <-> controller.received_4_) & ((next(controller.received_3_) <-> controller.received_3_) & ((next(controller.received_2_) <-> controller.received_2_) & (next(controller.received_1_) <-> controller.received_1_)))) & (next(controller.z) = controller.z & (next(controller.location) = controller.location & next(controller.time) = controller.time))))) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_4.EVENT = read_evt & scheduler.EVENT = read_4) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & controller.EVENT = stutter))) | (((((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & next(sensor_4.time) = sensor_4.time) & (((sensor_4.location = wait & next(sensor_4.location) = send) & next(sensor_4.y) = sensor_4.y) & next(sensor_4.u) = sensor_4.u)) & sensor_4.u = controller.sensors_u_must_be_0) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((controller.location = rest & !controller.received_4_) & next(controller.z) = 0) & next(controller.location) = rec) & next(controller.received_4_)) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.u) = controller.u) | ((((((((controller.location = wait & !controller.received_4_) & next(controller.z) = 0) & next(controller.u) = controller.u) & next(controller.location) = rec) & next(controller.received_4_)) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_4.EVENT = send_evt & controller.EVENT = send_4) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & scheduler.EVENT = stutter))) | ((((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & next(sensor_4.time) = sensor_4.time) & (((sensor_4.location = send & next(sensor_4.location) = done) & next(sensor_4.y) = 0) & next(sensor_4.u) = sensor_4.u)) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & (((((((((((controller.location = rec & controller.received_4_) & !((controller.received_1_ & controller.received_2_) & controller.received_3_)) & controller.z >= 0.25) & next(controller.z) = controller.z) & next(controller.location) = wait) & next(controller.u) = 0) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_) | ((((((((((((controller.location = rec & controller.received_1_) & controller.received_2_) & controller.received_3_) & controller.received_4_) & controller.z >= 0.25) & next(controller.z) = 0) & next(controller.location) = compute) & next(controller.u) = controller.u) & next(controller.received_1_) = controller.received_1_) & next(controller.received_2_) = controller.received_2_) & next(controller.received_3_) = controller.received_3_) & next(controller.received_4_) = controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((sensor_4.EVENT = ack_evt & controller.EVENT = ack_4) & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = wait & !(((controller.received_1_ & controller.received_2_) & controller.received_3_) & controller.received_4_)) & next(controller.z) = controller.z) & next(controller.u) = 0) & next(controller.location) = rest) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = expire_1 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = compute & controller.z >= 1.25) & next(controller.location) = rest) & next(controller.u) = 0) & next(controller.z) = controller.z) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = signal_1 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = wait & !(((controller.received_1_ & controller.received_2_) & controller.received_3_) & controller.received_4_)) & next(controller.z) = controller.z) & next(controller.u) = 0) & next(controller.location) = rest) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = expire_2 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = compute & controller.z >= 1.25) & next(controller.location) = rest) & next(controller.u) = 0) & next(controller.z) = controller.z) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = signal_2 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = wait & !(((controller.received_1_ & controller.received_2_) & controller.received_3_) & controller.received_4_)) & next(controller.z) = controller.z) & next(controller.u) = 0) & next(controller.location) = rest) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = expire_3 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = compute & controller.z >= 1.25) & next(controller.location) = rest) & next(controller.u) = 0) & next(controller.z) = controller.z) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = signal_3 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = wait & !(((controller.received_1_ & controller.received_2_) & controller.received_3_) & controller.received_4_)) & next(controller.z) = controller.z) & next(controller.u) = 0) & next(controller.location) = rest) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = expire_4 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter))) | (((((((((((next(sensor_1.u) = sensor_1.u & (next(sensor_1.y) = sensor_1.y & (next(sensor_1.location) = sensor_1.location & next(sensor_1.time) = sensor_1.time))) & (next(sensor_2.u) = sensor_2.u & (next(sensor_2.y) = sensor_2.y & (next(sensor_2.location) = sensor_2.location & next(sensor_2.time) = sensor_2.time)))) & (next(sensor_3.u) = sensor_3.u & (next(sensor_3.y) = sensor_3.y & (next(sensor_3.location) = sensor_3.location & next(sensor_3.time) = sensor_3.time)))) & (next(sensor_4.u) = sensor_4.u & (next(sensor_4.y) = sensor_4.y & (next(sensor_4.location) = sensor_4.location & next(sensor_4.time) = sensor_4.time)))) & (next(scheduler.x_4) = scheduler.x_4 & (next(scheduler.x_3) = scheduler.x_3 & ((next(scheduler.wait_3) <-> scheduler.wait_3) & (next(scheduler.x_2) = scheduler.x_2 & ((next(scheduler.wait_2) <-> scheduler.wait_2) & (next(scheduler.x_1) = scheduler.x_1 & ((next(scheduler.wait_1) <-> scheduler.wait_1) & (next(scheduler.location) = scheduler.location & next(scheduler.time) = scheduler.time))))))))) & next(controller.time) = controller.time) & ((((((((controller.location = compute & controller.z >= 1.25) & next(controller.location) = rest) & next(controller.u) = 0) & next(controller.z) = controller.z) & !next(controller.received_1_)) & !next(controller.received_2_)) & !next(controller.received_3_)) & !next(controller.received_4_))) & (!(controller.u > 0) | controller.sensors_u_must_be_0 = 0)) & (((((((!(sensor_1.location = done) | sensor_1.y <= 1) & (!(sensor_1.location = wait) | sensor_1.y <= 4)) & ((!(sensor_2.location = done) | sensor_2.y <= 1) & (!(sensor_2.location = wait) | sensor_2.y <= 8))) & ((!(sensor_3.location = done) | sensor_3.y <= 1) & (!(sensor_3.location = wait) | sensor_3.y <= 12))) & ((!(sensor_4.location = done) | sensor_4.y <= 1) & (!(sensor_4.location = wait) | sensor_4.y <= 16))) & ((((!(scheduler.location = loc_sensor_1) | scheduler.x_1 <= 16) & (!(scheduler.location = loc_sensor_2) | scheduler.x_2 <= 16)) & (!(scheduler.location = loc_sensor_3) | scheduler.x_3 <= 16)) & (!(scheduler.location = loc_sensor_4) | scheduler.x_4 <= 16))) & (((!(controller.location = rec) | controller.z <= 1) & (!(controller.location = wait) | controller.z <= 1)) & (!(controller.location = compute) | controller.z <= 1)))) & (((((((!(next(sensor_1.location) = done) | next(sensor_1.y) <= 1) & (!(next(sensor_1.location) = wait) | next(sensor_1.y) <= 4)) & ((!(next(sensor_2.location) = done) | next(sensor_2.y) <= 1) & (!(next(sensor_2.location) = wait) | next(sensor_2.y) <= 8))) & ((!(next(sensor_3.location) = done) | next(sensor_3.y) <= 1) & (!(next(sensor_3.location) = wait) | next(sensor_3.y) <= 12))) & ((!(next(sensor_4.location) = done) | next(sensor_4.y) <= 1) & (!(next(sensor_4.location) = wait) | next(sensor_4.y) <= 16))) & ((((!(next(scheduler.location) = loc_sensor_1) | next(scheduler.x_1) <= 16) & (!(next(scheduler.location) = loc_sensor_2) | next(scheduler.x_2) <= 16)) & (!(next(scheduler.location) = loc_sensor_3) | next(scheduler.x_3) <= 16)) & (!(next(scheduler.location) = loc_sensor_4) | next(scheduler.x_4) <= 16))) & (((!(next(controller.location) = rec) | next(controller.z) <= 1) & (!(next(controller.location) = wait) | next(controller.z) <= 1)) & (!(next(controller.location) = compute) | next(controller.z) <= 1)))) & (((((controller.EVENT = signal_4 & sensor_1.EVENT = stutter) & sensor_2.EVENT = stutter) & sensor_3.EVENT = stutter) & sensor_4.EVENT = stutter) & scheduler.EVENT = stutter)))


INVARSPEC
 !(((sensor_1.location = send & sensor_2.location = send) & sensor_3.location = send) & sensor_4.location = send);


