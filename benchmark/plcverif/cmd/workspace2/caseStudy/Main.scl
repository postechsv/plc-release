
VAR_GLOBAL
	GLOBAL_TIME : TIME := T#0ms;
	CYCLE_TIME  : TIME := T#1s;
	OUT         : DINT;
END_VAR


FUNCTION_BLOCK WAIT_TIME
	VAR_INPUT
		PERIOD : TIME;
	END_VAR

	VAR_OUTPUT
		PASSED : BOOL := TRUE;
	END_VAR
	VAR
		FIRST : BOOL := TRUE;
		INIT  : TIME := T#0ms;
	END_VAR
BEGIN
	IF FIRST THEN
		FIRST := FALSE;
		INIT := GLOBAL_TIME;
		PASSED := FALSE;
	ELSE
		IF GLOBAL_TIME - INIT >= PERIOD THEN
			PASSED := TRUE;
			FIRST := TRUE;
		ELSE
			PASSED := FALSE;
		END_IF;
	END_IF;
END_FUNCTION_BLOCK


FUNCTION_BLOCK Main1
	VAR
		CYCLE    : DINT;
		WAITTIME : WAIT_TIME;
	END_VAR
BEGIN
	IF WAITTIME.PASSED THEN
		CYCLE := CYCLE + 1;
		OUT := OUT + 2;
	END_IF;

	WAITTIME(PERIOD := T#4s) ;
END_FUNCTION_BLOCK

FUNCTION_BLOCK Main2
	VAR
		CYCLE    : DINT;
		WAITTIME : WAIT_TIME;
	END_VAR
BEGIN
	IF WAITTIME.PASSED THEN
		CYCLE := CYCLE + 1;
		OUT := OUT - 1;
	END_IF;

	WAITTIME(PERIOD := T#2s) ;
END_FUNCTION_BLOCK

FUNCTION_BLOCK Main3
	VAR
		CYCLE    : DINT;
		WAITTIME : WAIT_TIME;
		MOUT : DINT ;
	END_VAR
BEGIN
	IF WAITTIME.PASSED THEN
		CYCLE := CYCLE + 1;
		OUT := OUT + 3;
		MOUT := OUT ;
	END_IF;

	WAITTIME(PERIOD := T#1s) ;
END_FUNCTION_BLOCK


FUNCTION_BLOCK Main
	VAR
		M1 : Main1;
		M2 : Main2;
		M3 : Main3;
	END_VAR
BEGIN
	GLOBAL_TIME := GLOBAL_TIME + CYCLE_TIME;
	M1();
	M2();
	M3();
END_FUNCTION_BLOCK
