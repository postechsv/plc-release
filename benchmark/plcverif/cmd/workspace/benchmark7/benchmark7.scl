PROGRAM Main
	VAR
		CYCLE  : DINT := 0;
		INPUT1 : DINT;
		INPUT2 : DINT;
		INPUT3 : DINT;
		INPUT4 : DINT;
		INPUT5 : DINT;
		INPUT6 : DINT;
		INPUT7 : DINT;
		CMP1   : USER_CMP;
		CMP2   : USER_CMP;
		CMP3   : USER_CMP;
		CMP4   : USER_CMP;
		CMP5   : USER_CMP;
		CMP6   : USER_CMP;
		CMP7   : USER_CMP;
		OUT    : BOOL;
	END_VAR
BEGIN
	CYCLE := CYCLE + 1;
	CMP1(
		IN1 := INPUT1,
		IN2 := INPUT3
	) ;
	CMP2(
		IN1 := INPUT5,
		IN2 := INPUT3
	) ;
	CMP3(
		IN1 := INPUT2,
		IN2 := INPUT7
	) ;
	CMP4(
		IN1 := INPUT4,
		IN2 := INPUT7
	) ;
	CMP5(
		IN1 := INPUT6,
		IN2 := INPUT7
	) ;
	CMP6(
		IN1 := INPUT4,
		IN2 := INPUT1
	) ;
	CMP7(
		IN1 := INPUT4,
		IN2 := INPUT2
	) ;
	OUT := CMP1.LT AND CMP2.EQ AND CMP3.QT AND CMP4.LT AND CMP5.LT AND CMP6.LT AND CMP7.LT;
END_PROGRAM

FUNCTION_BLOCK USER_CMP
	VAR_INPUT
		IN1 : DINT := 0;
		IN2 : DINT := 0;
	END_VAR

	VAR_OUTPUT
		LT : BOOL := FALSE;
		EQ : BOOL := FALSE;
		QT : BOOL := FALSE;
	END_VAR


	IF ( IN1 < IN2 ) THEN
		LT := TRUE;
	END_IF;
	IF ( IN1 = IN2 ) THEN
		EQ := TRUE;
	END_IF;
	IF ( IN1 > IN2 ) THEN
		QT := TRUE;
	END_IF;

END_FUNCTION_BLOCK